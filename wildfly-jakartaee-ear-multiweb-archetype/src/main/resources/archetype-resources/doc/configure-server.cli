#set( $symbol_pound = '#' )
        #set( $symbol_escape = '\' )
        #set( $symbol_dollar = '$' )

${symbol_pound} Batch script to configure the security domain and define the database query used to authenticate users
batch


${symbol_pound} Add the JDBC security realm creation
${symbol_pound}Comment out the following line if using hex encoding or modular crypt passwords
/subsystem=elytron/jdbc-realm=servlet-security-jdbc-realm:add(principal-query=[{sql="SELECT PASSWORD, SALT, ITERATION_COUNT FROM ${prefixuppercase}_USERS WHERE USERNAME = ?", data-source="${rootArtifactId}DS", bcrypt-mapper={password-index=1, salt-index=2, iteration-count-index=3}},{sql="SELECT R.NAME, 'Roles' FROM ${prefixuppercase}_USERS_ROLES UR INNER JOIN ROLES R ON R.ID = UR.ROLE_ID INNER JOIN USERS U ON U.ID = UR.USER_ID WHERE U.USERNAME = ?", data-source="${rootArtifactId}DS", attribute-mapping=[{index=1, to=roles}]}])

${symbol_pound}Uncomment the following line for hex encoding
${symbol_pound}/subsystem=elytron/jdbc-realm=servlet-security-jdbc-realm:add(principal-query=[{sql="SELECT PASSWORD, SALT, ITERATION_COUNT FROM ${prefixuppercase}_USERS WHERE USERNAME = ?", data-source="${rootArtifactId}DS", bcrypt-mapper={password-index=1, hash-encoding=hex, salt-index=2, salt-encoding=hex, iteration-count-index=3}},{sql="SELECT R.NAME, 'Roles' FROM ${prefixuppercase}_USERS_ROLES UR INNER JOIN ${prefixuppercase}_ROLES R ON R.ID = UR.ROLE_ID INNER JOIN ${prefixuppercase}_USERS U ON U.ID = UR.USER_ID WHERE U.USERNAME = ?", data-source="${rootArtifactId}DS", attribute-mapping=[{index=1, to=roles}]}])

${symbol_pound}Uncomment the following line for modular crypt passwords
${symbol_pound}/subsystem=elytron/jdbc-realm=servlet-security-jdbc-realm:add(principal-query=[{sql="SELECT PASSWORD FROM ${prefixuppercase}_USERS WHERE USERNAME = ?", data-source="${rootArtifactId}DS", modular-crypt-mapper={password-index=1}},{sql="SELECT R.NAME, 'Roles' FROM ${prefixuppercase}_USERS_ROLES UR INNER JOIN ${prefixuppercase}_ROLES R ON R.ID = UR.ROLE_ID INNER JOIN ${prefixuppercase}_USERS U ON U.ID = UR.USER_ID WHERE U.USERNAME = ?", data-source="${rootArtifactId}DS", attribute-mapping=[{index=1, to=roles}]}])

${symbol_pound} Add a simple role decoder for the "roles" attribute mapping
/subsystem=elytron/simple-role-decoder=from-roles-attribute:add(attribute=roles)

${symbol_pound} Configure the ${rootArtifactId} security domain
/subsystem=elytron/security-domain=${rootArtifactId}-sd:add(default-realm=servlet-security-jdbc-realm, realms=[{realm=servlet-security-jdbc-realm, role-decoder=from-roles-attribute}], permission-mapper=default-permission-mapper)

${symbol_pound} Configure the HTTP Authentication Factory
/subsystem=elytron/http-authentication-factory=${rootArtifactId}-http-auth:add(http-server-mechanism-factory=global,security-domain=${rootArtifactId}-sd,mechanism-configurations=[{mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=RealmUsersRoles}]}])

${symbol_pound} Configure Undertow's application security domain
/subsystem=undertow/application-security-domain=${rootArtifactId}:add(http-authentication-factory=${rootArtifactId}-http-auth)

${symbol_pound} Run the batch commands
run-batch

${symbol_pound} Reload the server configuration
reload